<Window x:Class="WpfTest.Window4"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfTest"
        xmlns:Tset="clr-namespace:Teststyle;assembly=Teststyle"
        mc:Ignorable="d"
        x:Name="_Base"
        Title="Window4" Height="450" Width="800">
    <Window.Resources>
        <Style TargetType="ToggleButton" x:Key="stlToggleButton">
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border x:Name="Back" Background="Transparent" BorderThickness="1" BorderBrush="Transparent">
                            <Path Name="PathFill" Fill="Black" Width="8" Height="6" StrokeThickness="0" Data="M5,0 L10,10 L0,10 z" RenderTransformOrigin="0.5,0.5" Stretch="Fill">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="180"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="PathFill" Property="Fill" Value="White"></Setter>
                                <Setter TargetName="Back" Property="Background" Value="Gray"></Setter>
                                <Setter TargetName="Back" Property="BorderBrush" Value="Transparent"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ComboBox" x:Key="stlComboBox">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
            <Setter Property="Foreground" Value="Black"></Setter>
            <Setter Property="Height" Value="24"></Setter>
            <Setter Property="Margin" Value="0,0,0,0"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid Background="#F7FDF7">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.7*"/>
                                <ColumnDefinition Width="0.3*" MaxWidth="30"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock  Grid.Column="0"   VerticalAlignment="Center" Text="{TemplateBinding Text}"></TextBlock>
                            <Border  Grid.Column="0" BorderThickness="1,1,1,1" BorderBrush="Gray" CornerRadius="1,0,0,1">
                            </Border>
                            <Border Grid.Column="1" BorderThickness="0,1,1,1" BorderBrush="Gray" CornerRadius="0,1,1,0">
                                <ToggleButton Style="{StaticResource stlToggleButton}" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"></ToggleButton>
                            </Border>
                            <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                                <Border CornerRadius="1" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                    <Border.Effect>
                                        <DropShadowEffect Color="Black" BlurRadius="2" ShadowDepth="0" Opacity="0.5"/>
                                    </Border.Effect>
                                    <ScrollViewer Margin="4,6,4,6" Style="{DynamicResource ScrollViewerStyle}" MaxHeight="{TemplateBinding MaxDropDownHeight}" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                        <!-- StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True -->
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Background="White"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid x:Name="Grd">
        <DataGrid AutoGenerateColumns="False" HorizontalAlignment="Stretch" Margin="5,5,5,163" Name="dataGrid1" VerticalAlignment="Stretch" ItemsSource="{Binding Itemlist.DefaultView}" HorizontalGridLinesBrush="Gainsboro" VerticalGridLinesBrush="Gainsboro">
            <DataGrid.Columns>
                <DataGridTextColumn Header=" ID " Binding="{Binding ID}" ></DataGridTextColumn>
                <DataGridTextColumn Header="姓 名" Width ="100" Binding="{Binding Name}" ></DataGridTextColumn>
                <DataGridTextColumn Header="电 话" Width ="100" Binding="{Binding PhoneNumber}" ></DataGridTextColumn>
                <DataGridTextColumn Header="住 址" Width ="100" Binding="{Binding Address}" ></DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
        <Tset:BorderButton Margin="70,282,622,37"    Width=" 100" Height=" 100" TestIndex="{Binding _Base, ElementName=index,Mode=TwoWay ,UpdateSourceTrigger=PropertyChanged}"     ></Tset:BorderButton>
        <Button Width="100" Height="30 " Click="Button_Click_1" Margin="337,319,355,70"></Button>
        <ComboBox  Margin="337,319,0,51" Width="178" Height="23" Style="{StaticResource stlComboBox}">
            <ComboBoxItem  >
                <TextBlock Text="aa"></TextBlock>
            </ComboBoxItem>
            <ComboBoxItem >
                <TextBlock Text="bb"></TextBlock>
            </ComboBoxItem>
            <ComboBoxItem >
                <TextBlock Text="cc"></TextBlock>
            </ComboBoxItem>
        </ComboBox>
    </Grid>
</Window>
