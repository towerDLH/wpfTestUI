<Window x:Class="WpfApp3.Window8"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp3"
        xmlns:cnv="clr-namespace:WpfApp3.Converts"
        mc:Ignorable="d"
        Title="Window8" Height="450" Width="800">
    <Window.Resources>

        <HierarchicalDataTemplate x:Key="treeviewTemplate" ItemsSource="{Binding Children,Mode=TwoWay}">
            <Grid  Background="Transparent">
                <Grid.Resources>
                </Grid.Resources>
                <Grid MinHeight="30" x:Name="userinfo" Background="Transparent" Margin="-5 0 0 0" Visibility="{Binding Visibility,ElementName=groupinginfo,Converter={StaticResource visibleToReverse}}">
                    <Grid Height="50" x:Name="grid">
                        <Border Background="#62acf9" Width="40" Height="40" CornerRadius="4" HorizontalAlignment="Left" Margin="0 0 0 0">
                            <TextBlock Text="{Binding SurName}" FontSize="23" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                        <TextBlock Text="{Binding Name}" Margin="50 7 0 0" FontSize="13"/>
                        <TextBlock Text="{Binding Info}" Foreground="#808080" Margin="50 30 0 0"/>
                    </Grid>
                </Grid>
                <StackPanel MinHeight="25" x:Name="groupinginfo" Orientation="Horizontal" Background="Transparent" HorizontalAlignment="Left" Visibility="{Binding IsGrouping,Converter={StaticResource boolToVisible}}">
                    <TextBlock Text="{Binding DisplayName}" Margin="3 0" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                </StackPanel>
            </Grid>
        </HierarchicalDataTemplate>
        <!--TreeViewItem样式代码-->

       

        <Style  x:Key="DefaultTreeViewItem" TargetType="{x:Type TreeViewItem}">
            <Setter Property="MinHeight" Value="25" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <ControlTemplate.Resources>
                            <cnv:TreeViewConver  x:Key="indentConverter"/>
                        </ControlTemplate.Resources>
                        <Grid Background="Transparent">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Border Name="itemBackground" Background="{TemplateBinding Background}"  
                                BorderBrush="{TemplateBinding BorderBrush}"  
                                BorderThickness="{TemplateBinding BorderThickness}"  
                                Padding="{TemplateBinding Padding}">
                                <Grid Background="Transparent">
                                    <Grid x:Name="ItemRoot" Margin="{Binding Converter={StaticResource indentConverter},RelativeSource={RelativeSource TemplatedParent}}" Background="Transparent">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="16" />
                                            <ColumnDefinition Width="20" />
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        
                                        <ToggleButton x:Name="ExBtn" Grid.Column="1" HorizontalAlignment="Left" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
                                            <ToggleButton.Style>
                                                <Style TargetType="{x:Type ToggleButton}">
                                                    <Setter Property="Focusable" Value="False"/>
                                                    <Setter Property="Width" Value="16"/>
                                                    <Setter Property="Height" Value="16"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                <Border Background="Transparent" Height="16"   Width="16">
                                                                    <TextBlock Text="&#xf07b;" Style="{DynamicResource FontAwesome}"  x:Name="TxtFont" Foreground="Red" />
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsChecked" Value="True">
                                                                        <Setter Property="Text" TargetName="TxtFont" Value="&#xf07c;"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ToggleButton.Style>
                                        </ToggleButton>
                                        <ToggleButton x:Name="Expander" HorizontalAlignment="Left" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
                                            <ToggleButton.Style>
                                                <Style TargetType="{x:Type ToggleButton}">
                                                    <Setter Property="Focusable" Value="False"/>
                                                    <Setter Property="Width" Value="16"/>
                                                    <Setter Property="Height" Value="16"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                <Border Background="Transparent" Height="16" Padding="5" Width="16">
                                                                    <Path x:Name="ExpandPath" Data="M0,0 L0,6 L6,0 z" Fill="#1593CB" Stroke="#1593CB">
                                                                        <Path.RenderTransform>
                                                                            <RotateTransform Angle="135" CenterY="3" CenterX="3"/>
                                                                        </Path.RenderTransform>
                                                                    </Path>
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsChecked" Value="True">
                                                                        <Setter Property="RenderTransform" TargetName="ExpandPath">
                                                                            <Setter.Value>
                                                                                <RotateTransform Angle="180" CenterY="3" CenterX="3"/>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                        <Setter Property="Fill" TargetName="ExpandPath" Value="#0357aa"/>
                                                                        <Setter Property="Stroke" TargetName="ExpandPath" Value="#0357aa"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Stroke" TargetName="ExpandPath" Value="#0357aa"/>
                                                                        <Setter Property="Fill" TargetName="ExpandPath" Value="#0357aa"/>
                                                                    </Trigger>
                                                                    <MultiTrigger>
                                                                        <MultiTrigger.Conditions>
                                                                            <Condition Property="IsMouseOver" Value="True"/>
                                                                            <Condition Property="IsChecked" Value="True"/>
                                                                        </MultiTrigger.Conditions>
                                                                        <Setter Property="Stroke" TargetName="ExpandPath" Value="#0357aa"/>
                                                                        <Setter Property="Fill" TargetName="ExpandPath" Value="#0357aa"/>
                                                                    </MultiTrigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ToggleButton.Style>
                                        </ToggleButton>
                                       
                                        <ContentPresenter Grid.Column="2" x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="Stretch" >
                                        </ContentPresenter>
                                    </Grid>
                                </Grid>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" Grid.Row="1"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsGrouping}" Value="false">
                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                            </DataTrigger>
                            <Trigger Property="HasItems" Value="False">
                                <Setter Property="Visibility" TargetName="Expander" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="False">
                                <Setter Property="Visibility" TargetName="ExBtn" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsExpanded" Value="False">
                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" TargetName="itemBackground" Value="#b7d2fa"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsFocused" Value="False"/>
                                    <Condition SourceName="itemBackground" Property="IsMouseOver" Value="true"/>
                                </MultiTrigger.Conditions>
                                <!--<Setter Property="Background" Value="#b7d2fa" TargetName="itemBackground"/>-->
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="#FFADADAD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--TreeView样式代码-->
        <Style TargetType="{x:Type TreeView}">
            <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
            <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"></Setter>
            <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
            <Setter Property="ItemContainerStyle" Value="{StaticResource DefaultTreeViewItem}"></Setter>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel IsItemsHost="True" Margin="0"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <HierarchicalDataTemplate x:Key="ItemNode"   DataType="{x:Type local:NodeX}" ItemsSource="{Binding Nodes}">
            <StackPanel Orientation="Horizontal" Height="28">
                <!--<Image Source="{Binding Icon}" x:Name="Text"></Image>-->
                <!--<xly:FImage Source="{Binding Icon}" Width="22" Height="22"></xly:FImage>-->
                <TextBlock Text="&#xf022;" Style="{DynamicResource FontAwesome}"  x:Name="TxtFont" Foreground="Red" />
                <TextBlock Text="{Binding Name}" FontSize="13" VerticalAlignment="Center" Margin="3,0,0,0"></TextBlock>
            </StackPanel>
            <HierarchicalDataTemplate.Triggers>
                    <DataTrigger Binding="{Binding Path=HasItems,RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True">
                    <Setter TargetName="TxtFont" Property="Visibility" Value="Collapsed"/>
                    </DataTrigger>
            </HierarchicalDataTemplate.Triggers>
        </HierarchicalDataTemplate>
    </Window.Resources>
    <Grid>
        <TreeView Name="system_tree" Grid.Column="0" Grid.Row="0"  Padding="0" BorderThickness="1"  ItemTemplate="{StaticResource ItemNode}"      >
            <TreeView.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="新增" Click="Adder_Click"></MenuItem>
                    <MenuItem Header="编辑" Click="ModifyPmClick"></MenuItem>
                    <MenuItem Header="删除" Click="DelPm_Click"></MenuItem>
                </ContextMenu>
            </TreeView.ContextMenu>
        </TreeView>
        <DataGrid    AutoGenerateColumns="False"  AlternationCount="2" IsReadOnly="True" CanUserAddRows="False" ItemsSource="{Binding ShowProductDeliveryDtlList}"    HorizontalScrollBarVisibility="Auto" Margin="0,1,0,-1"    >
            <DataGrid.Columns>
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Expander Expanded="Expander_Expanded" Collapsed="Expander_Collapsed"></Expander>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--<DataGridTextColumn      Header="物料编码" Binding="{Binding ItemId,Converter={StaticResource ItemConver},ConverterParameter=0,Mode=OneWay,UpdateSourceTrigger=PropertyChanged }" ClipboardContentBinding="{x:Null}" />-->
                <DataGridTextColumn Header="物料名称" Binding="{Binding ItemId}" ClipboardContentBinding="{x:Null}" />
                <DataGridTextColumn Binding="{Binding Qty, Mode=OneWay, UpdateSourceTrigger=PropertyChanged,  StringFormat=\{0:0.######\}}" ClipboardContentBinding="{x:Null}" Header="计划耗用数"/>
                <DataGridTextColumn Binding="{Binding UnitId, Mode=OneWay, UpdateSourceTrigger=PropertyChanged }" ClipboardContentBinding="{x:Null}" Header="耗用单位"/>
                <DataGridTextColumn Binding="{Binding DeliveryQty, Mode=OneWay, UpdateSourceTrigger=PropertyChanged,  StringFormat=\{0:0.######\}}" ClipboardContentBinding="{x:Null}" Header="实际提货数量"/>
                <DataGridTextColumn Binding="{Binding DeliveryUnitId, Mode=OneWay, UpdateSourceTrigger=PropertyChanged }" ClipboardContentBinding="{x:Null}" Header="提货单位"/>
                <!--<DataGridTextColumn Binding="{Binding AlreadDeliveryQty, Mode=OneWay, UpdateSourceTrigger=PropertyChanged,  StringFormat=\{0:0.######\}}" ClipboardContentBinding="{x:Null}" Header="已提货数量"/>
                                <DataGridTextColumn Binding="{Binding DeliveryUnitId, Mode=OneWay, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource UnitConver},ConverterParameter=0 }" ClipboardContentBinding="{x:Null}" Header="单位"/>-->

                <!--alreadyQuantity-->

            </DataGrid.Columns>
            <DataGrid.RowDetailsTemplate   >
                <DataTemplate >
                    <DataGrid  AutoGenerateColumns="False" Name="gtdadjDel" AlternationCount="2" IsReadOnly="True" CanUserAddRows="False" ItemsSource="{Binding  ShowLpnRsList}"           HorizontalScrollBarVisibility="Auto"  VerticalScrollBarVisibility="Auto" SelectedCellsChanged="GtdadjDel_SelectedCellsChanged" Margin="0,13,0,-13" >
                        <DataGrid.Columns>
                            <DataGridTextColumn      Header="条码" Binding="{Binding  BarCode,Mode=OneWay,UpdateSourceTrigger=PropertyChanged }" ClipboardContentBinding="{x:Null}" />
                            <DataGridTextColumn      Header="物料编码" Binding="{Binding ItemId ,Mode=OneWay,UpdateSourceTrigger=PropertyChanged }" ClipboardContentBinding="{x:Null}" />
                            <DataGridTextColumn Header="物料名称" Binding="{Binding ItemId  ,Mode=OneWay,UpdateSourceTrigger=PropertyChanged }" ClipboardContentBinding="{x:Null}" />
                            <DataGridTextColumn Binding="{Binding CurBaseNum, Mode=OneWay, UpdateSourceTrigger=PropertyChanged,  StringFormat=\{0:0.######\}}" ClipboardContentBinding="{x:Null}" Header="可提货数量"/>

                            <DataGridTextColumn Header="工序" Visibility="Collapsed" Binding="{Binding proc_id ,Mode=OneWay,UpdateSourceTrigger=PropertyChanged }"  ClipboardContentBinding="{x:Null}"/>
                            <DataGridTextColumn Binding="{Binding lot_id , Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" ClipboardContentBinding="{x:Null}" Header="批号"/>
                            <DataGridTextColumn Binding="{Binding location_id , Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" ClipboardContentBinding="{x:Null}" Header="物料库位"/>
                            <DataGridTemplateColumn Header="是否拣货">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox  IsEnabled="False" Visibility="{Binding SelectPicking}" IsChecked="{Binding IsPicking,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" ></CheckBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Binding="{Binding UnitId, Mode=OneWay, UpdateSourceTrigger=PropertyChanged  }" ClipboardContentBinding="{x:Null}" Header="单位"/>
                            <!--<DataGridTemplateColumn Header="删除">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Content="删除" x:Name="LpnDelBtn" Click="LpnRsDelBtn_Click" Tag="{Binding BusinessLpnRsId}"></Button>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>-->
                        </DataGrid.Columns>
                    </DataGrid>
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>
        </DataGrid>
    </Grid>
</Window>
