<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:s="http://schemas.microsoft.com/winfx/2009/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp3"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:ui="clr-namespace:UI;assembly=UI"
       xmlns:ue="clr-namespace:UI.Eumn;assembly=UI"
       xmlns:um="clr-namespace:UI.Model;assembly=UI"
        xmlns:extend="clr-namespace:UI.Extend;assembly=UI"
        xmlns:hc="https://handyorg.github.io/handycontrol"
        xmlns:charts="clr-namespace:Visifire.Charts;assembly=WPFVisifire.Charts"
        xmlns:core="clr-namespace:Util.Controls;assembly=Util.Controls"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" x:Class="WpfApp3.Window9"
        mc:Ignorable="d"
        x:Name="_Base"
     WindowStyle="SingleBorderWindow"
        xmlns:r="clr-namespace:WpfApp3.Resours"
        Icon="pack://application:,,,/Image/timg.jpg"
        Title="Window9" Height="450" Width="800"  >

    <Window.Resources>
        <sys:Double x:Key="FontSize">13</sys:Double>
        <Storyboard x:Key="sbCloud" RepeatBehavior="Forever">

            <DoubleAnimation Storyboard.TargetName="cloud" Storyboard.TargetProperty="Angle" To="360" Duration="0:0:05" />
            <!--<DoubleAnimation Storyboard.TargetName="cloud"

                            Storyboard.TargetProperty="X"

                            From="0" To="280"

                            BeginTime="00:00:00"

                            Duration="00:00:5">

               

           </DoubleAnimation>

           <DoubleAnimation Storyboard.TargetName="cloud"

                            Storyboard.TargetProperty="Y"

                            From="0" To="180"

                            BeginTime="00:00:00"

                            Duration="00:00:5">

               

           </DoubleAnimation>-->

        </Storyboard>
        <CollectionViewSource x:Key="ItemCollectionViewSource"  CollectionViewType="{x:Type ListCollectionView}"/>
        <Style x:Key="DateGridTotalStyle" TargetType="{x:Type local:DataGridTotal}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderBrush" Value="#FF688CAF"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type local:DataGridTotal}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
                                            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                            <Grid Grid.Column="1" Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <DataGrid Visibility="Collapsed" x:Name="TotalRow" Grid.Row="1" Height="40" HeadersVisibility="None"
                                              AutoGenerateColumns="False" CanUserAddRows="False" IsReadOnly="True" />
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <SolidColorBrush x:Key="ListBorder" Color="#828790"/>
        <Style x:Key="TreeViewStyle1" TargetType="{x:Type TreeView}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeView}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ScrollViewer x:Name="_tv_scrollviewer_" Background="{TemplateBinding Background}" CanContentScroll="false" Focusable="false" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                                <Setter Property="CanContentScroll" TargetName="_tv_scrollviewer_" Value="true"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                    <Setter Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel/>
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Width" Value="8"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Cursor" Value="SizeWE"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DataGridColumnHeaderStyle1" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Grid>
                            <Themes:DataGridHeaderBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" IsClickable="{TemplateBinding CanUserSort}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" Padding="{TemplateBinding Padding}" SortDirection="{TemplateBinding SortDirection}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Themes:DataGridHeaderBorder>
                            <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                            <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="rec">
            <Grid>
                <Rectangle Fill="Gray"   ></Rectangle>
                <TextBlock Text="asa"></TextBlock>
            </Grid>
        </ControlTemplate>
    </Window.Resources>
    <Grid   >
        <Canvas  >
            <Border BorderThickness="22" BorderBrush="Black"/>
            <core:ProgressRing    IsActive="True" Foreground="#FF178BF0" Background="Purple" Opacity="0.5"  ></core:ProgressRing>
        </Canvas>
        <WrapPanel Background="Green">
            <hc:LoadingLine Width="100"   Margin="0,30" Foreground="Gray" FontSize="100"  DotDiameter="20"   Visibility="Collapsed" />
            <PasswordBox Width="140" Height="50" PasswordChar="X" Password="sf" BorderBrush="#dcdcdc"     extend:PasswordBoxExtend.Attach="True" VerticalContentAlignment="Center" extend:PasswordBoxExtend.Password="{Binding Pwd, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <Label  FontFamily="Webdings"  Content="0"  ></Label>
            <Label  FontFamily="Webdings"  Content="1"></Label>
            <Label  FontFamily="Webdings"  Content="2"></Label>
            <Label  FontFamily="Webdings"  Content="r"></Label>
           
            <Button   Height="30"  Background="Transparent" Command="{Binding Sumbitcomm}"  CommandParameter="{Binding Addname}" >
                <Border CornerRadius="4" Background="SeaGreen">
                    <StackPanel Orientation="Horizontal" Margin="1,0"  >
                        <TextBlock Text="&#xE6B2;" Style="{DynamicResource FontAwesome1}"  Foreground="Red"/>
                        <TextBlock Text="确定" ></TextBlock>
                    </StackPanel>
                </Border>
            </Button>
            <TextBlock Text="aa" PreviewMouseLeftButtonDown="link_PreviewMouseLeftButtonDown"></TextBlock>
            <!--<Image  Style="{DynamicResource imagkey}"   HorizontalAlignment="Left" VerticalAlignment="Top"    RenderTransformOrigin="0.5,0.5">
                -->
            <!--<Image.RenderTransform>
                    <TranslateTransform x:Name="cloud"></TranslateTransform>
                </Image.RenderTransform>-->
            <!--<PasswordBox x:Name="usrPassword3" Width="150" Height="40"
    Style="{StaticResource EyePasswordBox}"
                Margin="3"
                extend:ControlAttachProperty.PlaceHolder="请输入密码"
                extend:ControlAttachProperty.CornerRadius="10"
                IsEnabled="True"/>
            <PasswordBox x:Name="usrPassword4" Width="150" Height="40"
    Style="{StaticResource EyePasswordBox}"
                Margin="3"
                extend:ControlAttachProperty.PlaceHolder="请输入密码"
                
            IsEnabled="True"/>-->
            <Grid Width="400" Height="200" Visibility="Hidden">
                <!--<ui:ArrowLine Stroke="Black"
                         StartPoint="0,0"
                         EndPoint="100,100"></ui:ArrowLine>-->
                <Polyline  x:Name="ply"  Stroke="Blue" StrokeThickness="2" Points="10,10,120,130"   ></Polyline>

                <Control Background="Red" Width="100" Height="10">
                    <Control.Template>
                        <ControlTemplate>
                            <Grid x:Name="a">

                                <Path Style="{StaticResource Process_DragThumb}"/>
                                <TextBlock Text="aa"></TextBlock>
                            </Grid>

                        </ControlTemplate>
                    </Control.Template>
                </Control>

                <WrapPanel>
                    <!--<ScrollBar  Height="30" Width="200"    Orientation="Horizontal">

                    </ScrollBar>-->
                    <!--<ProgressBar Height=" 30" Width="200"></ProgressBar>
                    <ListBox>
                        <Slider Height="50"  Foreground="Black"  x:Name="Ab"   Width="200" Value="1" Maximum="10" TickPlacement="BottomRight" TickFrequency="4" Ticks="1,3,9" IsSelectionRangeEnabled="True" SelectionStart="0" SelectionEnd="10"  ></Slider>
                        <Slider Height="30" Width="100"  Value="{Binding Path=Value,  ElementName=Ab}"   ></Slider>
                        -->
                    <!--<Path  Data="{DynamicResource CalendarGeometry}"  ></Path>-->
                    <!--
                    </ListBox>-->

                </WrapPanel>

            </Grid>
            <ScrollViewer  Visibility="Collapsed" ScrollViewer.VerticalScrollBarVisibility="Visible" ScrollViewer.HorizontalScrollBarVisibility="Visible" ScrollViewer.CanContentScroll="True"  >

                <Canvas Name="myDesigner"  Height="200" Width="400"  >
                    <Canvas.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform x:Name="scaleTransform" ScaleX="1" ScaleY="1"/>
                        </TransformGroup>
                    </Canvas.RenderTransform>
                    <!--<ui:workflowContrl></ui:workflowContrl>
                    <ui:workflowContrl ></ui:workflowContrl>-->
                </Canvas>
            </ScrollViewer>
            <core:ProgressRing Width="180" Height="180" Foreground="Red" Margin="5"  x:Name="load"  IsActive="False" />
            <TextBox  AcceptsReturn="True" Height="40" Width="49" Text="asdd"  TextWrapping="Wrap"></TextBox>
            <TextBox    Height="40" Width="30" Text="asdfasd" ></TextBox>
            <TextBlock Text="&#xE600;" Style="{DynamicResource FontAwesome1}" Foreground="Gold" />
            <TextBlock Text="&#xE6B1;" Style="{DynamicResource FontAwesome1}"  Foreground="Green"/>
            <TextBlock Text="&#xE6B2;" Style="{DynamicResource FontAwesome1}"  Foreground="Red"/>
            <TextBlock Text="&#xF000;" Style="{DynamicResource FontAwesome}" />
            <TextBlock Text="&#xF003;" Style="{DynamicResource FontAwesome}" >
                <TextBlock.ToolTip>
                    <ToolTip Placement="Right" 
                              
             PlacementRectangle="50,0,0,0"
             HorizontalOffset="10" 
             VerticalOffset="20"
             HasDropShadow="false"
             Opened="whenToolTipOpens"
             Closed="whenToolTipCloses"
             >
                        <Grid >
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <DataGrid  extend:DatagridExtend.DisplayRowNumber="True"  HeadersVisibility="Column"  AlternationCount="2"   VerticalScrollBarVisibility="Visible"   DataContext="{StaticResource ItemCollectionViewSource}" Height="210"   CanUserAddRows="False" AutoGenerateColumns="False" IsReadOnly="True" ItemsSource="{Binding PurOrderDetails}"   x:Name="gtdpurorder2"  MouseDoubleClick="gtdpurorder_MouseDoubleClick"   HorizontalScrollBarVisibility="Auto"  PreviewMouseLeftButtonDown="gtdpurorder_PreviewMouseLeftButtonDown" SelectedCellsChanged="gtdpurorder_SelectedCellsChanged_1"   LoadingRow="gtdpurorder_LoadingRow"  >
                                <!--Style="{DynamicResource DateGridTotalStyle}"-->
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn Header="序号">
                                        <DataGridTemplateColumn.CellTemplate >
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Header, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}, Mode=FindAncestor}}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn   Binding="{Binding Name, Mode=OneWay, StringFormat=\{0:0.######\}, UpdateSourceTrigger=PropertyChanged}" ClipboardContentBinding="{x:Null}" Header="姓名">
                                        <DataGridTextColumn.CellStyle>
                                            <Style TargetType="{x:Type DataGridCell}">
                                                <Setter Property="Content" Value="{Binding Content, RelativeSource={RelativeSource TemplatedParent}, StringFormat=\{0:0.###\}}"/>
                                            </Style>
                                        </DataGridTextColumn.CellStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Binding="{Binding Age, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ClipboardContentBinding="{x:Null}" Header="年龄">
                                        <DataGridTextColumn.CellStyle>
                                            <Style TargetType="{x:Type DataGridCell}">
                                                <Setter Property="Content" Value="{Binding Content, RelativeSource={RelativeSource TemplatedParent}, StringFormat=\{0:0.##\}}"/>
                                            </Style>
                                        </DataGridTextColumn.CellStyle>
                                    </DataGridTextColumn>
                                    <DataGridTemplateColumn Header="nbbb">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>

                                                <!--<TextBlock Text="{Binding Age, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat=\{0:0.######\}}"></TextBlock>-->
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn>
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBox Text="{Binding Age, Converter={StaticResource TextDoubleToString}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn>
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <ui:TextBoxEx Width="100" Height="100" VerticalAlignment="Top" XRegExp="^\d+(\.\d+)?$" Text="{Binding Age, Converter={StaticResource TextDoubleToString}, Mode=TwoWay, StringFormat=\{0:0.######\}, UpdateSourceTrigger=PropertyChanged}"  />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn Binding="{Binding Age, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="aa"/>
                                </DataGrid.Columns>
                            </DataGrid>
                            <TextBlock  Grid.Row="1"><Run Text="sdd" /><Run Text=" "/><Run Text="{Binding Number}"/></TextBlock>
                        </Grid>
                    </ToolTip>
                </TextBlock.ToolTip>
            </TextBlock>
            <TextBlock Text="&#xF015;" x:Name="a" Style="{DynamicResource FontAwesome}" MouseEnter="TextBlock_MouseEnter"   MouseLeave="TextBlock_MouseLeave"/>
            <Popup 
                PlacementTarget="{Binding ElementName=a}"
                 StaysOpen="False"
            IsOpen="True"
            AllowsTransparency="True"
            PopupAnimation="Slide"
                 Placement="Mouse"
                x:Name="LinPop">

                <TextBlock><Run Text="{Binding Text, ElementName=NUmber}"/></TextBlock>
            </Popup>
            <Button >
                <Grid>
                    <TextBlock Text="&#xF07B;" Style="{DynamicResource FontAwesome}"   VerticalAlignment="Top" HorizontalAlignment="Right"/>
                </Grid>
            </Button>
            <StackPanel  >
                <TextBlock Text="&#xF01A;" Style="{DynamicResource FontAwesome}" Height="14" />
                <TextBlock Text="abd"       FontSize="13"  VerticalAlignment="Top"   HorizontalAlignment="Center"><Run Text="asd"   /></TextBlock>
            </StackPanel>
            <TextBlock Text="&#xF01A;"  Style="{DynamicResource FontAwesome}" />
            <ui:IconButton Width="130">
                <Grid>
                    <TextBlock Text="b"></TextBlock>
                    <TextBlock Text="b"></TextBlock>
                    <TextBlock Text="c"></TextBlock>
                    <TextBlock Text="ba"></TextBlock>
                </Grid>
            </ui:IconButton>
            <ui:TextBoxEx IsError="False"  ></ui:TextBoxEx>
            <Label Content="{DynamicResource biFile}"></Label>
            <Label Content="{DynamicResource biHelp}"></Label>
            <Label Content="{DynamicResource biAbout}"></Label>
            <Button Content="切换语言包" Click="Button_Click_4"></Button>
            <Button Content="换肤" Click="Button_Click_5" ></Button>
            <Button Content="换肤" Click="Button_Click_6" ></Button>
            <TextBox Width="80" Height="30"      >
                <TextBox.Style>
                    <Style TargetType="TextBox"  >
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=_Base,Path=YuWen}" Value="{x:Static local:SModel.ShuXue}">
                                <Setter Property="IsEnabled" Value="False"></Setter>
                                <Setter Property="Background" Value="Red"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>
            <TextBox x:Name="SearchBox"  TabIndex="0" BorderThickness="1" Margin="2" Height="23" HorizontalAlignment="Left" Width="110" Grid.Column="0"   ToolTipService.ToolTip="Please input keywords" ToolTipService.InitialShowDelay="1" ToolTipService.Placement="MousePoint">
                <TextBox.Resources>
                    <VisualBrush x:Key="HelpBrush" TileMode="None" Opacity="0.5" Stretch="None" AlignmentX="Left">
                        <VisualBrush.Visual>
                            <TextBlock FontStyle="Italic" Text="Search Files"/>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </TextBox.Resources>
                <TextBox.Style>
                    <Style TargetType="TextBox">
                        <Style.Triggers>
                            <Trigger Property="Text" Value="{x:Null}">
                                <Setter Property="Background" Value="{StaticResource HelpBrush}"/>
                            </Trigger>
                            <Trigger Property="Text" Value="">
                                <Setter Property="Background" Value="{StaticResource HelpBrush}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>


            </TextBox>

            <core:BusyBox Width="80" Height="80" Foreground="White" Background="Red"  Margin="5"  IsActive="True" />
            <Popup x:Name="ConfigPopup" Height="auto" Width="150" StaysOpen="False" Placement="Bottom" Margin="0,20,0,0" IsOpen="False" HorizontalAlignment="Left" Opacity="0.5">
                <Grid Width="auto" Height="auto">
                    <ListBox x:Name="MailConfigSelection" KeyDown="MailConfigSelection_OnKeyDown" IsTextSearchEnabled="True"  ></ListBox>
                </Grid>
            </Popup>
            <PasswordBox  Width="102"  FontWeight="Normal" IsEnabled="False" Background="Transparent" DataContext="asdads" />
            <TextBlock Text="1" x:Name="NUmber"/>
            <CheckBox Content="aa"/>
            <Button Content="删除测试" Click="Button_Click_2"    >
                <Button.ToolTip>
                    <ToolTip>
                        <StackPanel>
                            <TextBlock FontWeight="Heavy"><Run Text="两个TextBlock"/></TextBlock>
                            <TextBlock><Run Text="简要介绍：Tooltip是一个十分强大的功能组件！"/></TextBlock>
                        </StackPanel>
                    </ToolTip>
                </Button.ToolTip>
            </Button>
            <TextBlock Text="{Binding Text, ElementName=WelcomeText, StringFormat=Hello \{0\}}" Margin="10,10,0,0"/>
            <ui:ComboxTree Width="200" Height="100" x:Name="mcom"/>
            <TreeView Style="{DynamicResource TreeViewStyle1}"/>
            <ComboBox Width="200" Height="20">
                <ComboBoxItem Content="ads" />
                <ComboBoxItem Content="ads1" />
                <ComboBoxItem Content="ads2" />
                <ComboBoxItem Content="ads3" />
            </ComboBox>
            <TextBlock  x:Name="ad"  Style="{StaticResource FontAwesome1}"  Foreground="Red"    />
            <TextBlock><Run Text="&#xF099;" Style="{DynamicResource FontAwesome}"  Foreground="Red"/><Run Text=" "/><Run Text=" Twitter:"  Style="{DynamicResource FontAwesome}"  /><Run Text=" "/><Run Text="1234565465" Style="{DynamicResource FontAwesome}"  /></TextBlock>
            <StackPanel  >
                <RadioButton   x:Name="YearRa" IsChecked="True" Content="年度" GroupName="TimeRa" HorizontalAlignment="Left" Margin="0,5" />
                <RadioButton Content="月度统计" x:Name="YueRa" GroupName="TimeRa"/>
            </StackPanel>
            <Button Content="radio选择的东西" Click="Button_Click"  IsEnabled="False"/>
            <Button Content="dg" Click="Button_Click_1"/>
            <ui:TextBoxEx XRegExp="^[0-9]+([.]{1}[0-9]+){0,1}$" Width="100" BorderThickness="0,0,0,1"/>
            <!--<s:Shape></s:Shape>-->
            <hc:CoverFlow x:Name="CoverFlowMain" Margin="32" Width="500" Height="300"/>
            <!--
                <Image.RenderTransform>
                    <RotateTransform x:Name="cloud" Angle="0"/>
                </Image.RenderTransform>

            </Image>-->


            <Path x:Name="ExpandPath" Data="M0,0 L0,6 L6,0 z" Fill="#0357aa" Stroke="#0357aa">
                <Path.RenderTransform>
                    <RotateTransform Angle="135" CenterY="3" CenterX="3"/>
                </Path.RenderTransform>
            </Path>
            <hc:LoadingCircle  />
            <hc:Rate  AllowHalf="True"   x:Name="RateText"/>
            <TextBlock Text="{Binding Value, ElementName=RateText}"/>
            <hc:CompareSlider  Width="100"  Value="5" Height="198">
                <hc:CompareSlider.TargetContent >
                    <TextBlock Text="&#xE77E;" Style="{DynamicResource FontAwesome1}"   FontSize="20" Background="Red" />
                </hc:CompareSlider.TargetContent>
                <hc:CompareSlider.SourceContent>
                    <TextBlock Text="&#xF01A;" Style="{DynamicResource FontAwesome}"  Background="Green"/>
                </hc:CompareSlider.SourceContent>
            </hc:CompareSlider>
        </WrapPanel>
        <!--<charts:Chart    
                        x:Name="topchar"
                          Width="400" Height="210" 
                          View3D="True"
                          Background="Transparent"
                          BorderBrush="Transparent"
                          AnimatedUpdate="true">
            <charts:Chart.Legends >
                <charts:Legend FontSize="2 "  FontColor="Wheat" VerticalAlignment="Bottom"  HorizontalAlignment="Center" />
            </charts:Chart.Legends>
            <charts:Chart.Titles >
                <charts:Title Text="aa"  FontColor="White"></charts:Title>
            </charts:Chart.Titles>
            <charts:Chart.AxesX>
                <charts:Axis Title="时间" TitleFontSize="14" />
            </charts:Chart.AxesX>

            <charts:Chart.AxesY>
                <charts:Axis  Title="单位 (元)" TitleFontSize="14" LineThickness="0">
                    <charts:Axis.Grids>
                        <charts:ChartGrid LineColor="WhiteSmoke"/>
                    </charts:Axis.Grids>
                    <charts:Axis.Ticks>
                        <charts:Ticks LineColor="Transparent"/>
                    </charts:Axis.Ticks>
                </charts:Axis>

                <charts:Axis AxisType="Secondary"
                                 Suffix="%" 
                                 LineThickness="0">
                    <charts:Axis.Ticks>
                        <charts:Ticks LineColor="Transparent"/>
                    </charts:Axis.Ticks>
                </charts:Axis>
            </charts:Chart.AxesY>


            <charts:Chart.PlotArea>
                <charts:PlotArea BorderThickness="1" 
                                     BorderColor="WhiteSmoke" 
                                     CornerRadius="7,7,0,0"/>
            </charts:Chart.PlotArea>

            <charts:Chart.Series>
                <charts:DataSeries LegendText="业务收入"
                                       Bevel="false"
                                       AxisYType="Primary" 
                                       RenderAs="StackedColumn"  LabelText ="#AxisXLabel,#YValue" >
                    <charts:DataSeries.DataPoints>
                        <charts:DataPoint AxisXLabel="1月" YValue="1200"  />
                        <charts:DataPoint AxisXLabel="2月" YValue="1500"/>
                        <charts:DataPoint AxisXLabel="3月" YValue="1700"/>
                        <charts:DataPoint AxisXLabel="4月" YValue="2000"/>
                    </charts:DataSeries.DataPoints>
                </charts:DataSeries>
                <charts:DataSeries LegendText="业务收入"
                                       Bevel="false"
                                       AxisYType="Primary" 
                                       RenderAs="StackedColumn"  LabelText ="#AxisXLabel,#YValue" >
                    <charts:DataSeries.DataPoints>
                        <charts:DataPoint AxisXLabel="1月" YValue="520"  />
                        <charts:DataPoint AxisXLabel="2月" YValue="1500"/>
                        <charts:DataPoint AxisXLabel="3月" YValue="1700"/>
                        <charts:DataPoint AxisXLabel="4月" YValue="2000"/>
                    </charts:DataSeries.DataPoints>
                </charts:DataSeries>
                -->
        <!--<charts:DataSeries LegendText="净利润"
                                       Bevel="false"
                                      
                                       AxisYType="Primary" 
                                       RenderAs="Column" >
                    <charts:DataSeries.DataPoints>
                        <charts:DataPoint AxisXLabel="1月" YValue="1000"/>
                        <charts:DataPoint AxisXLabel="2月" YValue="1200"/>
                        <charts:DataPoint AxisXLabel="3月" YValue="1500"/>
                        <charts:DataPoint AxisXLabel="4月" YValue="1800"/>
                    </charts:DataSeries.DataPoints>
                </charts:DataSeries>

                <charts:DataSeries LegendText="毛利率"
                                       Bevel="false" 
                                      
                                       AxisYType="Secondary"
                                       RenderAs="Line" >

                    <charts:DataSeries.DataPoints>
                        <charts:DataPoint AxisXLabel="1月" YValue="0.5"/>
                        <charts:DataPoint AxisXLabel="2月" YValue="0.8"/>
                        <charts:DataPoint AxisXLabel="3月" YValue="0.7"/>
                        <charts:DataPoint AxisXLabel="4月" YValue="0.5"/>
                    </charts:DataSeries.DataPoints>
                </charts:DataSeries>

                <charts:DataSeries LegendText="净利率" 
                                       Bevel="false" 
                                     
                                       RenderAs="Line" 
                                       AxisYType="Secondary">
                    <charts:DataSeries.DataPoints>
                        <charts:DataPoint AxisXLabel="1月" YValue="0.5"/>
                        <charts:DataPoint AxisXLabel="2月" YValue="0.3"/>
                        <charts:DataPoint AxisXLabel="3月" YValue="0.7"/>
                        <charts:DataPoint AxisXLabel="4月" YValue="0.6"/>
                    </charts:DataSeries.DataPoints>
                </charts:DataSeries>-->
        <DataGrid   Visibility="Collapsed"  SelectedIndex="0"  ScrollViewer.CanContentScroll="False"  extend:DatagridExtend.DisplayRowNumber="True" SelectionMode="Single"
                      AlternationCount="2"  MouseUp="gtdpurorder_MouseUp"                        CanUserAddRows="False" 
                    AutoGenerateColumns="False"   ItemsSource="{Binding PurOrderDetails}"
                       
                    Margin="240,209,19,83"      RowDetailsVisibilityMode="Collapsed" >
            <DataGrid.Resources>
                <Style TargetType="{x:Type ToolTip}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Border Background="Azure"  BorderThickness="2" BorderBrush="#FF8FEC43" CornerRadius="5" Padding="5">
                                    <StackPanel Height="Auto" Width="400">
                                        <TextBlock TextWrapping="NoWrap" MaxWidth="400"   LineHeight="26" >
                                            <TextBlock.Text>
                                                <MultiBinding StringFormat="{}{0}（{1},{2}）">
                                                    <Binding Path="Name"/>
                                                    <Binding Path="Age"/>
                                                    <Binding Path="Sex"/>
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                        <TextBlock TextWrapping="Wrap" MaxWidth="400"  Text="{Binding info}" LineHeight="26"  />
                                    </StackPanel>
                                </Border>

                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </DataGrid.Resources>
            <DataGrid.DataContext>
                <StaticResource ResourceKey="ItemCollectionViewSource"/>
            </DataGrid.DataContext>
            <!--Style="{DynamicResource DateGridTotalStyle}"-->
            <DataGrid.Columns>
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Expander   Expanded="Expander_Expanded"  Collapsed="Expander_Collapsed" >
                                <!--<Expander.Style>
                                    <Style TargetType="Expander">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={ x:Type DataGridRow},AncestorLevel=1},Path=DetailsVisibility}" Value="Visible">
                                                <Setter Property="IsExpanded" Value="True"></Setter>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={ x:Type DataGridRow},AncestorLevel=1},Path=DetailsVisibility}" Value="Collapsed">
                                                <Setter Property="IsExpanded" Value="False"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Expander.Style>-->
                            </Expander>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridCheckBoxColumn Binding="{Binding Path=IsSelected,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGridRow}}}">
                    <DataGridCheckBoxColumn.HeaderTemplate>
                        <DataTemplate>
                            <CheckBox x:Name="ckbSelectedAll" Content="全选" Checked="ckbSelectedAll_Checked"  Unchecked="ckbSelectedAll_Unchecked" IsChecked="False" />
                        </DataTemplate>
                    </DataGridCheckBoxColumn.HeaderTemplate>
                </DataGridCheckBoxColumn>
                <DataGridTemplateColumn Header="序号">
                    <DataGridTemplateColumn.CellTemplate >
                        <DataTemplate>
                            <TextBlock Text="{Binding Header, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}, Mode=FindAncestor}}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn   Binding="{Binding Name, Mode=OneWay, StringFormat=\{0:0.######\}, UpdateSourceTrigger=PropertyChanged}" ClipboardContentBinding="{x:Null}" Header="姓名">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Setter Property="Content" Value="{Binding Content, RelativeSource={RelativeSource TemplatedParent}, StringFormat=\{0:0.###\}}"/>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding Age, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ClipboardContentBinding="{x:Null}" Header="年龄">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Setter Property="Content" Value="{Binding Content, RelativeSource={RelativeSource TemplatedParent}, StringFormat=\{0:0.##\}}"/>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTemplateColumn Header="nbbb">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>

                            <!--<TextBlock Text="{Binding Age, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat=\{0:0.######\}}"></TextBlock>-->
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn  >
                    <DataGridTemplateColumn.Header >
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition Width="auto"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="到货日期"  ></TextBlock>
                            <Expander Header="批量修改"    Grid.Column="1"  IsExpanded="False" >
                                <WrapPanel Orientation="Horizontal"   >
                                    <Label Content="批量添加到货日期"></Label>
                                    <DatePicker x:Name="SDate" Height="24" HorizontalAlignment="Right"  TabIndex="11"  SelectedDate="{Binding  Deadlinedate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat=\{yyyy-MM-dd\}}"    VerticalAlignment="Center" Width="154" />
                                    <Button Content="确定" Width="50" Height="20" Margin="5,0" x:Name="BtnDaeddate"  ></Button>
                                    <WrapPanel.Style>
                                        <Style TargetType="WrapPanel">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Expander},AncestorLevel=1},Path=IsExpanded}" Value="False">
                                                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Expander},AncestorLevel=1},Path=IsExpanded}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </WrapPanel.Style>
                                </WrapPanel>
                            </Expander>
                        </Grid>
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Content="asdd" Click="Button_Click_3"></Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox Text="{Binding Age, Converter={StaticResource TextDoubleToString}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ui:TextBoxEx Width="100" Height="100" VerticalAlignment="Top" XRegExp="^\d+(\.\d+)?$" Text="{Binding Age, Converter={StaticResource TextDoubleToString}, Mode=TwoWay, StringFormat=\{0:0.######\}, UpdateSourceTrigger=PropertyChanged}"  />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Binding="{Binding Age, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="aa"/>
            </DataGrid.Columns>
            <DataGrid.RowDetailsTemplate >
                <DataTemplate>
                    <Grid>
                        <DataGrid     Margin="30,20,0,20" Style="{x:Null}"  extend:DatagridExtend.DisplayRowNumber="True"       extend:DatagridExtend.IsSlide="True"     AutoGenerateColumns="False" x:Name="DtgLpnrs"  AlternationCount="2" IsReadOnly="True" CanUserAddRows="False"    ItemsSource="{Binding   RelativeSource={RelativeSource AncestorLevel=1, AncestorType={x:Type DataGrid}},Path=ItemsSource}"     MouseUp="DtgLpnrs_MouseUp"     >
                            <DataGrid.Columns>
                                <DataGridTemplateColumn Header="序号"  >
                                    <DataGridTemplateColumn.CellTemplate >
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Header, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}, Mode=FindAncestor}}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn Header="计划单名称" Binding="{Binding PurchaseName, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <DataGridTextColumn Header="计划单编号" Binding="{Binding BusinessCode, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <DataGridTextColumn Binding="{Binding BaseQty, Mode=OneWay, StringFormat=\{0:0.######\}, UpdateSourceTrigger=PropertyChanged}" ClipboardContentBinding="{x:Null}" Header="分配数量"/>

                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                    <!--<DataGrid Grid.Row="1" AlternationCount="2" Name="dg_dtl"    AutoGenerateColumns="False" CanUserAddRows="False"  ItemsSource="{Binding ShowReceivedDtlRecords}"   SelectedCellsChanged="Dg_dtl_SelectedCellsChanged" >
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Binding="{Binding ItemId,Converter={StaticResource itemconvert}, ConverterParameter=0, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="物料编号" IsReadOnly="True" />
                                        <DataGridTextColumn Binding="{Binding ItemId,Converter={StaticResource itemconvert}, ConverterParameter=1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="物料名称" IsReadOnly="True" />
                                        <DataGridTextColumn Header="工序序号"  Binding="{Binding PrcId,Converter={StaticResource procConver},ConverterParameter=0,Mode=OneWay,UpdateSourceTrigger=PropertyChanged }"  ClipboardContentBinding="{x:Null}"/>
                                        <DataGridTextColumn Binding="{Binding PlanQty, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged , StringFormat=\{0:0.######\}}" Header="需求数量" IsReadOnly="True" />
                                        <DataGridTextColumn Binding="{Binding ReceiveQty, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged , StringFormat=\{0:0.######\}}" Header="领取数量" IsReadOnly="True" />
                                    </DataGrid.Columns>
                                </DataGrid>-->
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>
        </DataGrid>
        <Grid x:Name="GrdTest">
            <StackPanel>
                <Canvas>
                    <Button  Click="Button_Click_7" Content="sadfasdf"   ></Button>
                </Canvas>
            </StackPanel>
        </Grid>
        <DataGrid     x:Name="gtdpurorder"   Visibility="Collapsed" >
            <DataGrid.Columns>
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.HeaderTemplate >
                        <DataTemplate>
                            <CheckBox x:Name="ckbSelectedAll" Content="全选" Checked="ckbSelectedAll_Checked" Unchecked="ckbSelectedAll_Unchecked" IsChecked="False" />
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Path=IsSelected,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGridRow}}}" Click="CheckBox_Click" ></CheckBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="编号"   Binding="{Binding Name}" IsReadOnly="True"/>
                <DataGridTemplateColumn Header="aaa">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Content="{Binding id}"  >
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding id}" Value="{x:Static ue:StudentEnum.英语 }">
                                                <Setter Property="Visibility" Value="Collapsed"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>

    </Grid>
</Window>
