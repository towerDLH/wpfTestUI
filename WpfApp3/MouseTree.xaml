<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp3"
        xmlns:hc="https://handyorg.github.io/handycontrol" x:Class="WpfApp3.MouseTree"
        mc:Ignorable="d"
        Title="MouseTree" Height="450" Width="800">
    <Window.Resources>
        <HierarchicalDataTemplate x:Key="ItemNode"    ItemsSource="{Binding Childern}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="16"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Column="0" Margin="2,0" Text="&#xF07B;"   x:Name="img" Foreground="Gray" >
                    <TextBlock.Style>
                        <Style>
                            <Setter Property="TextElement.FontFamily" Value="pack://WpfApp3:,,,/Resours/#FontAwesome" />
                            <Setter Property="FrameworkElement.Width" Value="20"/>
                            <Setter Property="FrameworkElement.Height" Value="20"/>
                            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                            <Setter Property="TextBlock.FontSize" Value="15"/>
                            <Setter Property="TextBlock.Foreground" Value="Green"/>
                            <EventSetter Event="UIElement.MouseEnter" Handler="Image_MouseEnter"/>
                            <EventSetter Event="UIElement.MouseLeave" Handler="Image_MouseLeave"/>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <TextBlock x:Name="tb" Grid.Column="1" Text="{Binding Name}">
                    <TextBlock.Style>
                        <Style>
                            <EventSetter Event="UIElement.MouseEnter" Handler="TextBlock_MouseEnter"/>
                            <EventSetter Event="UIElement.MouseLeave" Handler="TextBlock_MouseLeave"/>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <Grid x:Name="r1" Grid.Row="1" Grid.ColumnSpan="2" Height="4" Visibility="Collapsed">
                    <Ellipse Fill="Blue" StrokeThickness="0" Width="4" Height="4" HorizontalAlignment="Left"/>
                    <Rectangle Fill="Blue" StrokeThickness="0" Height="1" VerticalAlignment="Center"/>
                </Grid>
                <Grid x:Name="r2" Grid.Row="1" Grid.Column="1" Height="4" Visibility="Collapsed">
                    <Ellipse Fill="Blue" StrokeThickness="0" Width="4" Height="4" HorizontalAlignment="Left"/>
                    <Rectangle Fill="Blue" StrokeThickness="0" Height="1" VerticalAlignment="Center"/>
                </Grid>
            </Grid>
            <HierarchicalDataTemplate.Triggers>
                <DataTrigger Binding="{Binding HasItems, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True">
                    <Setter TargetName="img" Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsAdd}" Value="true" >
                    <Setter TargetName="r1" Property="Visibility" Value="Visible"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsAddIn}" Value="true" >
                    <Setter TargetName="r2" Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </HierarchicalDataTemplate.Triggers>
        </HierarchicalDataTemplate>


        <!--TreeViewItem样式代码-->
        <Style  x:Key="DefaultTreeViewItem" TargetType="{x:Type TreeViewItem}">
            <Setter Property="MinHeight" Value="25" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Margin" Value="0" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <ControlTemplate.Resources>
                        </ControlTemplate.Resources>
                        <Grid Background="Transparent">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Border Name="itemBackground" Background="{TemplateBinding Background}"  
                                BorderBrush="{TemplateBinding BorderBrush}"  
                                BorderThickness="{TemplateBinding BorderThickness}"  
                                Padding="{TemplateBinding Padding}">
                                <Grid Background="Transparent">
                                    <Grid x:Name="ItemRoot"  Background="Transparent">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto" />
                                            <ColumnDefinition Width="16" />
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <ToggleButton x:Name="Expander" HorizontalAlignment="Left" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
                                            <ToggleButton.Style>
                                                <Style TargetType="{x:Type ToggleButton}">
                                                    <Setter Property="Focusable" Value="False"/>
                                                    <Setter Property="Width" Value="16"/>
                                                    <Setter Property="Height" Value="16"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                <Border Background="Transparent" Height="16" Padding="5" Width="16">
                                                                    <Path x:Name="ExpandPath" Data="M0,0 L0,6 L6,0 z" Fill="#1593CB" Stroke="#1593CB">
                                                                        <Path.RenderTransform>
                                                                            <RotateTransform Angle="135" CenterY="3" CenterX="3"/>
                                                                        </Path.RenderTransform>
                                                                    </Path>
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsChecked" Value="True">
                                                                        <Setter Property="RenderTransform" TargetName="ExpandPath">
                                                                            <Setter.Value>
                                                                                <RotateTransform Angle="180" CenterY="3" CenterX="3"/>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                        <Setter Property="Fill" TargetName="ExpandPath" Value="#0357aa"/>
                                                                        <Setter Property="Stroke" TargetName="ExpandPath" Value="#0357aa"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Stroke" TargetName="ExpandPath" Value="#0357aa"/>
                                                                        <Setter Property="Fill" TargetName="ExpandPath" Value="#0357aa"/>
                                                                    </Trigger>
                                                                    <MultiTrigger>
                                                                        <MultiTrigger.Conditions>
                                                                            <Condition Property="IsMouseOver" Value="True"/>
                                                                            <Condition Property="IsChecked" Value="True"/>
                                                                        </MultiTrigger.Conditions>
                                                                        <Setter Property="Stroke" TargetName="ExpandPath" Value="#0357aa"/>
                                                                        <Setter Property="Fill" TargetName="ExpandPath" Value="#0357aa"/>
                                                                    </MultiTrigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ToggleButton.Style>
                                        </ToggleButton>
                                        <ToggleButton x:Name="ExBtn" Grid.Column="1" HorizontalAlignment="Left" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
                                            <ToggleButton.Style>
                                                <Style TargetType="{x:Type ToggleButton}">
                                                    <Setter Property="Focusable" Value="False"/>
                                                    <Setter Property="Width" Value="16"/>
                                                    <Setter Property="Height" Value="16"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                <Border Background="Transparent" Height="16"   Width="16">
                                                                    <TextBlock Text="&#xf07b;" Style="{DynamicResource FontAwesome}"  x:Name="TxtFont" Foreground="Gray" />
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsChecked" Value="True">
                                                                        <Setter Property="Text" TargetName="TxtFont" Value="&#xf07c;"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ToggleButton.Style>
                                        </ToggleButton>
                                        <ContentPresenter Grid.Column="2" x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="Stretch" >
                                        </ContentPresenter>
                                    </Grid>
                                </Grid>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" Grid.Row="1"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsGrouping}" Value="false">
                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                            </DataTrigger>
                            <Trigger Property="HasItems" Value="False">
                                <Setter Property="Visibility" TargetName="Expander" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="False">
                                <Setter Property="Visibility" TargetName="ExBtn" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsExpanded" Value="False">
                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" TargetName="itemBackground" Value="#b7d2fa"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsFocused" Value="False"/>
                                    <Condition SourceName="itemBackground" Property="IsMouseOver" Value="true"/>
                                </MultiTrigger.Conditions>
                                <!--<Setter Property="Background" Value="#b7d2fa" TargetName="itemBackground"/>-->
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="#FFADADAD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--TreeView样式代码-->
        <Style TargetType="{x:Type TreeView}">
            <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
            <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"></Setter>
            <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
            <Setter Property="ItemContainerStyle" Value="{StaticResource DefaultTreeViewItem}"></Setter>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel IsItemsHost="True" Margin="0"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
        </Style>

       
        <!--<HierarchicalDataTemplate x:Key="TreeViewDropItemTemplate" ItemsSource="{Binding Childern}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="16"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Image x:Name="img" Grid.Column="0" Margin="2,0" Source="{Binding BI}">
                    <Image.Style>
                        <Style>
                            <EventSetter Event="UIElement.MouseEnter" Handler="Image_MouseEnter"/>
                            <EventSetter Event="UIElement.MouseLeave" Handler="Image_MouseLeave"/>
                        </Style>
                    </Image.Style>
                </Image>
                <TextBlock x:Name="tb" Grid.Column="1" Text="{Binding Name}">
                    <TextBlock.Style>
                        <Style>
                            <EventSetter Event="UIElement.MouseEnter" Handler="TextBlock_MouseEnter"/>
                            <EventSetter Event="UIElement.MouseLeave" Handler="TextBlock_MouseLeave"/>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <Grid x:Name="r1" Grid.Row="1" Grid.ColumnSpan="2" Height="4" Visibility="Collapsed">
                    <Ellipse Fill="Blue" StrokeThickness="0" Width="4" Height="4" HorizontalAlignment="Left"/>
                    <Rectangle Fill="Blue" StrokeThickness="0" Height="1" VerticalAlignment="Center"/>
                </Grid>
                <Grid x:Name="r2" Grid.Row="1" Grid.Column="1" Height="4" Visibility="Collapsed">
                    <Ellipse Fill="Blue" StrokeThickness="0" Width="4" Height="4" HorizontalAlignment="Left"/>
                    <Rectangle Fill="Blue" StrokeThickness="0" Height="1" VerticalAlignment="Center"/>
                </Grid>
            </Grid>
            <HierarchicalDataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsAdd}" Value="true" >
                    <Setter TargetName="r1" Property="Visibility" Value="Visible"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsAddIn}" Value="true" >
                    <Setter TargetName="r2" Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </HierarchicalDataTemplate.Triggers>
        </HierarchicalDataTemplate>
        <Style x:Key="TreeViewStyle1" TargetType="{x:Type TreeView}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Background" Value="{DynamicResource RegionBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="hc:ScrollViewer.IsEnableInertia" Value="False"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeView}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <hc:ScrollViewer x:Name="_tv_scrollviewer_" Background="{TemplateBinding Background}" CanContentScroll="False" Focusable="False" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsEnableInertia="{Binding (hc:ScrollViewer.IsEnableInertia), RelativeSource={RelativeSource TemplatedParent}}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                <hc:ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type hc:ScrollViewer}">
                                        <ControlTemplate.Resources>
                                            <Storyboard x:Key="Storyboard2">
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_VerticalScrollBar">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_HorizontalScrollBar">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                            <Storyboard x:Key="Storyboard1">
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_VerticalScrollBar">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.8"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_HorizontalScrollBar">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.8"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </ControlTemplate.Resources>
                                        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" Grid.ColumnSpan="2" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0" Grid.RowSpan="2"/>
                                            <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Opacity="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}">
                                                <ScrollBar.Style>
                                                    <Style TargetType="{x:Type ScrollBar}">
                                                        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
                                                        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                                        <Setter Property="Foreground" Value="{DynamicResource ThirdlyTextBrush}"/>
                                                        <Setter Property="Background" Value="Transparent"/>
                                                        <Setter Property="Focusable" Value="False"/>
                                                        <Setter Property="BorderThickness" Value="0"/>
                                                        <Setter Property="Width" Value="8"/>
                                                        <Setter Property="MinWidth" Value="8"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                                    <hc:SimplePanel x:Name="Bg" SnapsToDevicePixels="True">
                                                                        <Border Background="{TemplateBinding Background}"/>
                                                                        <Track x:Name="PART_Track" IsDirectionReversed="True" IsEnabled="{TemplateBinding IsMouseOver}">
                                                                            <Track.DecreaseRepeatButton>
                                                                                <RepeatButton Command="ScrollBar.PageUpCommand">
                                                                                    <RepeatButton.Style>
                                                                                        <Style TargetType="{x:Type RepeatButton}">
                                                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                            <Setter Property="Background" Value="Transparent"/>
                                                                                            <Setter Property="Focusable" Value="False"/>
                                                                                            <Setter Property="IsTabStop" Value="False"/>
                                                                                            <Setter Property="Template">
                                                                                                <Setter.Value>
                                                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                                                    </ControlTemplate>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                        </Style>
                                                                                    </RepeatButton.Style>
                                                                                </RepeatButton>
                                                                            </Track.DecreaseRepeatButton>
                                                                            <Track.IncreaseRepeatButton>
                                                                                <RepeatButton Command="ScrollBar.PageDownCommand">
                                                                                    <RepeatButton.Style>
                                                                                        <Style TargetType="{x:Type RepeatButton}">
                                                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                            <Setter Property="Background" Value="Transparent"/>
                                                                                            <Setter Property="Focusable" Value="False"/>
                                                                                            <Setter Property="IsTabStop" Value="False"/>
                                                                                            <Setter Property="Template">
                                                                                                <Setter.Value>
                                                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                                                    </ControlTemplate>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                        </Style>
                                                                                    </RepeatButton.Style>
                                                                                </RepeatButton>
                                                                            </Track.IncreaseRepeatButton>
                                                                            <Track.Thumb>
                                                                                <Thumb Background="{TemplateBinding Foreground}">
                                                                                    <Thumb.Style>
                                                                                        <Style TargetType="{x:Type Thumb}">
                                                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                            <Setter Property="IsTabStop" Value="False"/>
                                                                                            <Setter Property="Template">
                                                                                                <Setter.Value>
                                                                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                                        <Rectangle x:Name="rectangle" Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" RadiusY="4" RadiusX="4" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>
                                                                                                        <ControlTemplate.Triggers>
                                                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                                                <Setter Property="Fill" TargetName="rectangle" Value="{DynamicResource SecondaryTextBrush}"/>
                                                                                                            </Trigger>
                                                                                                            <Trigger Property="IsDragging" Value="True">
                                                                                                                <Setter Property="Fill" TargetName="rectangle" Value="{DynamicResource PrimaryTextBrush}"/>
                                                                                                            </Trigger>
                                                                                                        </ControlTemplate.Triggers>
                                                                                                    </ControlTemplate>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                        </Style>
                                                                                    </Thumb.Style>
                                                                                </Thumb>
                                                                            </Track.Thumb>
                                                                        </Track>
                                                                    </hc:SimplePanel>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Style.Triggers>
                                                            <Trigger Property="Orientation" Value="Horizontal">
                                                                <Setter Property="Width" Value="Auto"/>
                                                                <Setter Property="MinWidth" Value="0"/>
                                                                <Setter Property="Height" Value="8"/>
                                                                <Setter Property="MinHeight" Value="8"/>
                                                                <Setter Property="BorderThickness" Value="0,1"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                                            <hc:SimplePanel x:Name="Bg" SnapsToDevicePixels="True">
                                                                                <Border Background="{TemplateBinding Background}"/>
                                                                                <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}">
                                                                                    <Track.DecreaseRepeatButton>
                                                                                        <RepeatButton Command="ScrollBar.PageLeftCommand">
                                                                                            <RepeatButton.Style>
                                                                                                <Style TargetType="{x:Type RepeatButton}">
                                                                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                                    <Setter Property="Background" Value="Transparent"/>
                                                                                                    <Setter Property="Focusable" Value="False"/>
                                                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                                                    <Setter Property="Template">
                                                                                                        <Setter.Value>
                                                                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                                <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                                                            </ControlTemplate>
                                                                                                        </Setter.Value>
                                                                                                    </Setter>
                                                                                                </Style>
                                                                                            </RepeatButton.Style>
                                                                                        </RepeatButton>
                                                                                    </Track.DecreaseRepeatButton>
                                                                                    <Track.IncreaseRepeatButton>
                                                                                        <RepeatButton Command="ScrollBar.PageRightCommand">
                                                                                            <RepeatButton.Style>
                                                                                                <Style TargetType="{x:Type RepeatButton}">
                                                                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                                    <Setter Property="Background" Value="Transparent"/>
                                                                                                    <Setter Property="Focusable" Value="False"/>
                                                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                                                    <Setter Property="Template">
                                                                                                        <Setter.Value>
                                                                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                                <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                                                            </ControlTemplate>
                                                                                                        </Setter.Value>
                                                                                                    </Setter>
                                                                                                </Style>
                                                                                            </RepeatButton.Style>
                                                                                        </RepeatButton>
                                                                                    </Track.IncreaseRepeatButton>
                                                                                    <Track.Thumb>
                                                                                        <Thumb Background="{TemplateBinding Foreground}">
                                                                                            <Thumb.Style>
                                                                                                <Style TargetType="{x:Type Thumb}">
                                                                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                                                    <Setter Property="Template">
                                                                                                        <Setter.Value>
                                                                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                                                <Rectangle x:Name="rectangle" Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" RadiusY="4" RadiusX="4" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>
                                                                                                                <ControlTemplate.Triggers>
                                                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                                                        <Setter Property="Fill" TargetName="rectangle" Value="{DynamicResource SecondaryTextBrush}"/>
                                                                                                                    </Trigger>
                                                                                                                    <Trigger Property="IsDragging" Value="True">
                                                                                                                        <Setter Property="Fill" TargetName="rectangle" Value="{DynamicResource PrimaryTextBrush}"/>
                                                                                                                    </Trigger>
                                                                                                                </ControlTemplate.Triggers>
                                                                                                            </ControlTemplate>
                                                                                                        </Setter.Value>
                                                                                                    </Setter>
                                                                                                </Style>
                                                                                            </Thumb.Style>
                                                                                        </Thumb>
                                                                                    </Track.Thumb>
                                                                                </Track>
                                                                            </hc:SimplePanel>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ScrollBar.Style>
                                            </ScrollBar>
                                            <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Opacity="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}">
                                                <ScrollBar.Style>
                                                    <Style TargetType="{x:Type ScrollBar}">
                                                        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
                                                        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                                        <Setter Property="Foreground" Value="{DynamicResource ThirdlyTextBrush}"/>
                                                        <Setter Property="Background" Value="Transparent"/>
                                                        <Setter Property="Focusable" Value="False"/>
                                                        <Setter Property="BorderThickness" Value="0"/>
                                                        <Setter Property="Width" Value="8"/>
                                                        <Setter Property="MinWidth" Value="8"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                                    <hc:SimplePanel x:Name="Bg" SnapsToDevicePixels="True">
                                                                        <Border Background="{TemplateBinding Background}"/>
                                                                        <Track x:Name="PART_Track" IsDirectionReversed="True" IsEnabled="{TemplateBinding IsMouseOver}">
                                                                            <Track.DecreaseRepeatButton>
                                                                                <RepeatButton Command="ScrollBar.PageUpCommand">
                                                                                    <RepeatButton.Style>
                                                                                        <Style TargetType="{x:Type RepeatButton}">
                                                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                            <Setter Property="Background" Value="Transparent"/>
                                                                                            <Setter Property="Focusable" Value="False"/>
                                                                                            <Setter Property="IsTabStop" Value="False"/>
                                                                                            <Setter Property="Template">
                                                                                                <Setter.Value>
                                                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                                                    </ControlTemplate>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                        </Style>
                                                                                    </RepeatButton.Style>
                                                                                </RepeatButton>
                                                                            </Track.DecreaseRepeatButton>
                                                                            <Track.IncreaseRepeatButton>
                                                                                <RepeatButton Command="ScrollBar.PageDownCommand">
                                                                                    <RepeatButton.Style>
                                                                                        <Style TargetType="{x:Type RepeatButton}">
                                                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                            <Setter Property="Background" Value="Transparent"/>
                                                                                            <Setter Property="Focusable" Value="False"/>
                                                                                            <Setter Property="IsTabStop" Value="False"/>
                                                                                            <Setter Property="Template">
                                                                                                <Setter.Value>
                                                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                                                    </ControlTemplate>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                        </Style>
                                                                                    </RepeatButton.Style>
                                                                                </RepeatButton>
                                                                            </Track.IncreaseRepeatButton>
                                                                            <Track.Thumb>
                                                                                <Thumb Background="{TemplateBinding Foreground}">
                                                                                    <Thumb.Style>
                                                                                        <Style TargetType="{x:Type Thumb}">
                                                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                            <Setter Property="IsTabStop" Value="False"/>
                                                                                            <Setter Property="Template">
                                                                                                <Setter.Value>
                                                                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                                        <Rectangle x:Name="rectangle" Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" RadiusY="4" RadiusX="4" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>
                                                                                                        <ControlTemplate.Triggers>
                                                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                                                <Setter Property="Fill" TargetName="rectangle" Value="{DynamicResource SecondaryTextBrush}"/>
                                                                                                            </Trigger>
                                                                                                            <Trigger Property="IsDragging" Value="True">
                                                                                                                <Setter Property="Fill" TargetName="rectangle" Value="{DynamicResource PrimaryTextBrush}"/>
                                                                                                            </Trigger>
                                                                                                        </ControlTemplate.Triggers>
                                                                                                    </ControlTemplate>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                        </Style>
                                                                                    </Thumb.Style>
                                                                                </Thumb>
                                                                            </Track.Thumb>
                                                                        </Track>
                                                                    </hc:SimplePanel>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Style.Triggers>
                                                            <Trigger Property="Orientation" Value="Horizontal">
                                                                <Setter Property="Width" Value="Auto"/>
                                                                <Setter Property="MinWidth" Value="0"/>
                                                                <Setter Property="Height" Value="8"/>
                                                                <Setter Property="MinHeight" Value="8"/>
                                                                <Setter Property="BorderThickness" Value="0,1"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                                            <hc:SimplePanel x:Name="Bg" SnapsToDevicePixels="True">
                                                                                <Border Background="{TemplateBinding Background}"/>
                                                                                <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}">
                                                                                    <Track.DecreaseRepeatButton>
                                                                                        <RepeatButton Command="ScrollBar.PageLeftCommand">
                                                                                            <RepeatButton.Style>
                                                                                                <Style TargetType="{x:Type RepeatButton}">
                                                                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                                    <Setter Property="Background" Value="Transparent"/>
                                                                                                    <Setter Property="Focusable" Value="False"/>
                                                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                                                    <Setter Property="Template">
                                                                                                        <Setter.Value>
                                                                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                                <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                                                            </ControlTemplate>
                                                                                                        </Setter.Value>
                                                                                                    </Setter>
                                                                                                </Style>
                                                                                            </RepeatButton.Style>
                                                                                        </RepeatButton>
                                                                                    </Track.DecreaseRepeatButton>
                                                                                    <Track.IncreaseRepeatButton>
                                                                                        <RepeatButton Command="ScrollBar.PageRightCommand">
                                                                                            <RepeatButton.Style>
                                                                                                <Style TargetType="{x:Type RepeatButton}">
                                                                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                                    <Setter Property="Background" Value="Transparent"/>
                                                                                                    <Setter Property="Focusable" Value="False"/>
                                                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                                                    <Setter Property="Template">
                                                                                                        <Setter.Value>
                                                                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                                <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                                                            </ControlTemplate>
                                                                                                        </Setter.Value>
                                                                                                    </Setter>
                                                                                                </Style>
                                                                                            </RepeatButton.Style>
                                                                                        </RepeatButton>
                                                                                    </Track.IncreaseRepeatButton>
                                                                                    <Track.Thumb>
                                                                                        <Thumb Background="{TemplateBinding Foreground}">
                                                                                            <Thumb.Style>
                                                                                                <Style TargetType="{x:Type Thumb}">
                                                                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                                    <Setter Property="IsTabStop" Value="False"/>
                                                                                                    <Setter Property="Template">
                                                                                                        <Setter.Value>
                                                                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                                                <Rectangle x:Name="rectangle" Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" RadiusY="4" RadiusX="4" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>
                                                                                                                <ControlTemplate.Triggers>
                                                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                                                        <Setter Property="Fill" TargetName="rectangle" Value="{DynamicResource SecondaryTextBrush}"/>
                                                                                                                    </Trigger>
                                                                                                                    <Trigger Property="IsDragging" Value="True">
                                                                                                                        <Setter Property="Fill" TargetName="rectangle" Value="{DynamicResource PrimaryTextBrush}"/>
                                                                                                                    </Trigger>
                                                                                                                </ControlTemplate.Triggers>
                                                                                                            </ControlTemplate>
                                                                                                        </Setter.Value>
                                                                                                    </Setter>
                                                                                                </Style>
                                                                                            </Thumb.Style>
                                                                                        </Thumb>
                                                                                    </Track.Thumb>
                                                                                </Track>
                                                                            </hc:SimplePanel>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ScrollBar.Style>
                                            </ScrollBar>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <EventTrigger RoutedEvent="Mouse.MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_VerticalScrollBar">
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.8"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_HorizontalScrollBar">
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.8"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="Mouse.MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_VerticalScrollBar">
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_HorizontalScrollBar">
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </hc:ScrollViewer.Template>
                                <ItemsPresenter/>
                            </hc:ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="Bd" Value="#FFF0F0F0"/>
                            </Trigger>
                            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="True">
                                <Setter Property="CanContentScroll" TargetName="_tv_scrollviewer_" Value="True"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.BasedOn>
                <Style TargetType="{x:Type Control}">
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Rectangle RadiusY="4" RadiusX="4">
                                                <Rectangle.Style>
                                                    <Style TargetType="{x:Type Rectangle}">
                                                        <Setter Property="Margin" Value="-2"/>
                                                        <Setter Property="Opacity" Value="0.6"/>
                                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                        <Setter Property="Stroke" Value="{DynamicResource SecondaryBorderBrush}"/>
                                                        <Setter Property="StrokeThickness" Value="2"/>
                                                        <Setter Property="StrokeDashArray" Value="1 1"/>
                                                    </Style>
                                                </Rectangle.Style>
                                            </Rectangle>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Style.BasedOn>
            <Style.Triggers>
                <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="True">
                    <Setter Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel IsItemsHost="True"/>
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>-->
    </Window.Resources>
    <Grid Margin="50">
        <TreeView x:Name="treeView" ItemTemplate="{DynamicResource ItemNode}" PreviewMouseDown="tvRequire_PreviewMouseDown"
                  MouseMove="tvRequire_MouseMove" MouseUp="tvRequire_MouseUp"
                  MouseLeave="tvRequire_MouseLeave"  />


    </Grid>
</Window>
 
