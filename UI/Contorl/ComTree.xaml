<UserControl x:Class="UI.Contorl.ComTree"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:UI.Contorl"
             mc:Ignorable="d" 
             x:Name="Base"
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <Grid.Resources>
            <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
                <Grid Height="25" HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>
                    <Border  Background="White" Grid.ColumnSpan="2" Opacity="0"/>
                    <Path x:Name="Arrow" Grid.Column="1"   Data="M 0 0  6 6 12 0 Z" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="None" Fill="#999" />
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsChecked" Value="true">
                        <Setter TargetName="Arrow" Property="RenderTransform">
                            <Setter.Value>
                                <RotateTransform   CenterX="6" CenterY="3" Angle="180"></RotateTransform>
                            </Setter.Value>
                        </Setter>
                        <Setter TargetName="Arrow" Property="Margin" Value="0 0 0 2"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style  TargetType="{x:Type ComboBox}">
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="MaxDropDownHeight" Value="400" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid>
                                <Border x:Name="Bg" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" BorderBrush="#eaeaea" BorderThickness="1"  >
                                    <Grid x:Name="PART_Root">
                                        <Grid x:Name="PART_InnerGrid" Margin="0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="0.3*" MaxWidth="30" />
                                            </Grid.ColumnDefinitions>
                                            <ListBox x:Name="PART_ListBoxChk"  SelectionMode="Multiple" BorderThickness="0" ScrollViewer.VerticalScrollBarVisibility="Disabled">
                                                <ListBox.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <VirtualizingStackPanel Orientation="Horizontal" VirtualizingStackPanel.IsVirtualizing="True" />
                                                    </ItemsPanelTemplate>
                                                </ListBox.ItemsPanel>
                                                <ListBox.ItemContainerStyle>
                                                    <Style TargetType="ListBoxItem">
                                                        <Setter Property="BorderThickness" Value="0"/>
                                                        <Setter Property="IsSelected" Value="True"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="ListBoxItem">
                                                                    <CheckBox  BorderThickness="0"  VerticalAlignment="Center" HorizontalAlignment="Center"  Content="{Binding Name}" IsChecked="{Binding Path=IsChecked,RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </ListBox.ItemContainerStyle>
                                            </ListBox>


                                            <ToggleButton x:Name="PART_DropDownToggle" IsTabStop="False"  
                                         IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                         Grid.Column="1" Template="{StaticResource ComboBoxToggleButton}" />
                                        </Grid>
                                    </Grid>
                                </Border>

                                <Popup x:Name="PART_Popup" AllowsTransparency="True"  Focusable="False" StaysOpen="False"
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                    <Grid Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}"  MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}" >
                                        <TreeView Width="{TemplateBinding Width}" Height="250"   ItemsSource="{Binding ElementName=Base,Path=CbTreeList}">
                                            <TreeView.ItemContainerStyle>
                                                <Style TargetType="{x:Type TreeViewItem}">
                                                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                                                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                                    <Setter Property="FontWeight" Value="Normal" />
                                                    <Style.Triggers>
                                                        <Trigger Property="IsSelected" Value="True">
                                                            <Setter Property="FontWeight" Value="Bold" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TreeView.ItemContainerStyle>

                                            <TreeView.ItemTemplate>
                                                <HierarchicalDataTemplate ItemsSource="{Binding Childen}">
                                                    <StackPanel Orientation="Horizontal">
                                                        <CheckBox Visibility="{Binding Path=CheckVisiable}" Tag="{Binding}" IsChecked="{Binding Path=IsChecked, Mode=TwoWay}" Click="cxb_Node_Click"  ></CheckBox>
                                                        <TextBlock x:Name="treeViewItemTB" Text="{Binding Name}"  />
                                                    </StackPanel>
                                                </HierarchicalDataTemplate>
                                            </TreeView.ItemTemplate>
                                        </TreeView>

                                    </Grid>
                                </Popup>
                            </Grid>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Grid.Resources>
        <ComboBox></ComboBox>
    </Grid>
</UserControl>
