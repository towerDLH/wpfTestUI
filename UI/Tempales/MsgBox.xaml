<UserControl x:Class="UI.Tempales.MsgBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:UI.Tempales" xmlns:vc="clr-namespace:UI.Converter" xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"  xmlns:system="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Flipper.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <vc:VisibilityConverter x:Key="vis"/>
            <Style x:Key="SimpleButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle Margin="2" FocusVisualStyle="{x:Null}" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="FontFamily" Value="Calibri"/>
                <Setter Property="Margin" Value="10 0 0 0"/>
                <Setter Property="Width" Value="80"/>
                <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="materialDesign:RippleAssist.Feedback" Value="White"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth1"/>
                <!--<Setter Property="FontWeight" Value="Light"/>-->
                <Setter Property="FontSize" Value="17"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="16,4"/>
                <Setter Property="Height" Value="28"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <AdornerDecorator CacheMode="{Binding (materialDesign:ShadowAssist.CacheMode), RelativeSource={RelativeSource Self}}">
                                    <Grid>
                                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2">
                                            <Border.Effect>
                                                <Binding Path="(materialDesign:ShadowAssist.ShadowDepth)" RelativeSource="{RelativeSource TemplatedParent}">
                                                    <Binding.Converter>
                                                        <materialDesign:ShadowConverter/>
                                                    </Binding.Converter>
                                                </Binding>
                                            </Border.Effect>
                                        </Border>
                                        <Border Background="{DynamicResource MaterialDesignBackground}" HorizontalAlignment="Left" Opacity="0.4">
                                            <Border.Width>
                                                <MultiBinding UpdateSourceTrigger="Default">
                                                    <MultiBinding.Converter>
                                                        <materialDesign:RangeLengthConverter/>
                                                    </MultiBinding.Converter>
                                                    <Binding Path="(materialDesign:ButtonProgressAssist.Minimum)" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                    <Binding Path="(materialDesign:ButtonProgressAssist.Maximum)" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                    <Binding Path="(materialDesign:ButtonProgressAssist.Value)" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ButtonBase}}"/>
                                                </MultiBinding>
                                            </Border.Width>
                                        </Border>
                                    </Grid>
                                </AdornerDecorator>
                                <materialDesign:Ripple ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Focusable="False" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="materialDesign:ShadowAssist.Darken" TargetName="border" Value="True"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter Property="materialDesign:ShadowAssist.Darken" TargetName="border" Value="True"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.23"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Border Background="White">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="25"/>
                    <RowDefinition/>
                    <RowDefinition Height="40"/>
                </Grid.RowDefinitions>
                <materialDesign:ColorZone  Padding="40" Mode="PrimaryMid"/>
                <TextBlock  Text="消息窗口"  FontSize="15" VerticalAlignment="Center" Margin="5 0 0 0" Foreground="White"  HorizontalAlignment="Left" />
                <StackPanel Grid.Row="1" Orientation="Horizontal">

                    <materialDesign:PackIcon Kind="{Binding Icon}" Foreground="{Binding Color}" Margin="20 0 0 0" VerticalAlignment="Center" Width="30" Height="30"/>

                    <TextBlock Margin="10 0 0 0"  VerticalAlignment="Center" HorizontalAlignment="Left" 
                               TextWrapping="Wrap" Foreground="#737373" FontSize="15" FontFamily="幼圆"  
                               Text="{Binding Msg}" Width="330" />
                </StackPanel>
                <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Content="取消" Background="#EDEDED" BorderBrush="#EDEDED"  materialDesign:ShadowAssist.ShadowDepth="Depth0"
                            Foreground="Black" Style="{StaticResource ResourceKey=SimpleButtonStyle}"
                            Margin="10 0 0 0"  Command="{x:Static wpf:DialogHost.CloseDialogCommand}" 
                            Visibility="{Binding BtnHide,Converter={StaticResource vis}}">
                        <Button.CommandParameter>
                            <system:Boolean>False</system:Boolean>
                        </Button.CommandParameter>
                    </Button>
                    <Button Content="确定" 
                            Style="{StaticResource ResourceKey=SimpleButtonStyle}" materialDesign:ShadowAssist.ShadowDepth="Depth0"
                            Margin="10 0 10 0" Command="{x:Static wpf:DialogHost.CloseDialogCommand}">
                        <Button.CommandParameter>
                            <system:Boolean>True</system:Boolean>
                        </Button.CommandParameter>
                    </Button>
                </StackPanel>
            </Grid>
        </Border>
    </Grid>
</UserControl>
